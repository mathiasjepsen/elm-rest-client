var _user$project$RESTClient$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$RESTClient$countDecoder = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'counter',
		_1: {ctor: '[]'}
	},
	_elm_lang$core$Json_Decode$int);
var _user$project$RESTClient$Model = function (a) {
	return {counter: a};
};
var _user$project$RESTClient$initialModel = _user$project$RESTClient$Model(0);
var _user$project$RESTClient$ResetCount = function (a) {
	return {ctor: 'ResetCount', _0: a};
};
var _user$project$RESTClient$resetCount = function () {
	var url = 'http://localhost:8080/elm_REST_server_test/api/counter/1';
	var request = A3(_elm_lang$http$Http$post, url, _elm_lang$http$Http$emptyBody, _elm_lang$core$Json_Decode$int);
	return A2(_elm_lang$http$Http$send, _user$project$RESTClient$ResetCount, request);
}();
var _user$project$RESTClient$FetchCount = function (a) {
	return {ctor: 'FetchCount', _0: a};
};
var _user$project$RESTClient$fetchCount = function () {
	var url = 'http://localhost:8080/elm_REST_server_test/api/counter';
	var request = A2(_elm_lang$http$Http$get, url, _user$project$RESTClient$countDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$RESTClient$FetchCount, request);
}();
var _user$project$RESTClient$init = {ctor: '_Tuple2', _0: _user$project$RESTClient$initialModel, _1: _user$project$RESTClient$fetchCount};
var _user$project$RESTClient$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Get':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$RESTClient$fetchCount};
			case 'Set':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$RESTClient$resetCount};
			case 'FetchCount':
				var _p1 = _p0._0;
				if (_p1.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{counter: _p1._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				var _p2 = _p0._0;
				if (_p2.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{counter: _p2._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$RESTClient$Set = {ctor: 'Set'};
var _user$project$RESTClient$Get = {ctor: 'Get'};
var _user$project$RESTClient$view = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$container,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_CDN$stylesheet,
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$row,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Grid_Row$centerMd,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Grid$col,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
								_1: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$mdAuto,
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A2(
									_rundis$elm_bootstrap$Bootstrap_ButtonGroup$buttonGroup,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_rundis$elm_bootstrap$Bootstrap_ButtonGroup$button,
											{
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
												_1: {
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(_user$project$RESTClient$Get),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Get'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_rundis$elm_bootstrap$Bootstrap_ButtonGroup$button,
												{
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Button$secondary,
													_1: {
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Events$onClick(_user$project$RESTClient$Set),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Set'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$row,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Grid_Row$centerMd,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$xs12,
									_1: {
										ctor: '::',
										_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$mdAuto,
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$h2,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_elm_lang$core$Basics$toString(model.counter)),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$RESTClient$main = _elm_lang$html$Html$program(
	{init: _user$project$RESTClient$init, view: _user$project$RESTClient$view, update: _user$project$RESTClient$update, subscriptions: _user$project$RESTClient$subscriptions})();
